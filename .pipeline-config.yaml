# Documentation on available configuration
# https://cloud.ibm.com/docs/devsecops?topic=devsecops-cd-devsecops-apps-byoa
# https://cloud.ibm.com/docs/devsecops?topic=devsecops-custom-scripts
version: '2'
preprocessor_version: latest

# CI Pipeline: code-checks, code-build, deploy-checks, deploy-release
tasks:
  code-checks:
    # code-checks includes five configurable steps: setup, detect-secrets, compliance-checks, peer-review, static-scan
    include:
      - dind
    steps:
      - name: checks-setup
        when: 'false'
      - name: detect-secrets
        when: 'false'
      - name: compliance-checks
        when: 'false'
      - name: static-scan
        when: 'false'

  code-build:
    include:
      - dind
    # code-build includes five configurable steps: setup, unit-test, build-artifact, sign-artifact, scan-artifact
    steps:
      - name: setup
        when: 'false'
      - name: unit-test
        when: 'false'
      - name: build-artifact
        include:
          - docker-socket
          - dind
        image: icr.io/continuous-delivery/base-images/base:v1.19.0
        displayName: Build Must gather
        runtimeClassName: x86-xlarge
        script: |
          #!/usr/bin/env bash
          set -x
          set -euo pipefail
          export GITHUB_TOKEN="$(get_env GITHUB_TOKEN)"
          export GITHUB_USER="$(get_env GITHUB_USER)"
          export IMAGE_REGISTRY="$(get_env IMAGE_REGISTRY)"
          export ARTIFACTOTY_USERNAME="$(get_env ARTIFACTOTY_USERNAME)"
          export ARTIFACTORY_TOKEN="$(get_env ARTIFACTORY_TOKEN)"
          export BUILDKIT_IMAGE="$(get_env BUILDKIT_IMAGE)"
          echo -e "machine github.ibm.com\n  login $GITHUB_TOKEN" >> ~/.netrc
          set_env "TRIGGER_NAME" "$TRIGGER_NAME"
          chmod 600 ~/.netrc
          cd "$WORKSPACE/$(load_repo app-repo path)"
          echo "Current directory : $(pwd)"
          echo "BUILDKIT_IMAGE : $(BUILDKIT_IMAGE)"
          echo "list directory : $(ls -ltr)"
          git config --global --add safe.directory $WORKSPACE/$(load_repo app-repo path)
          echo "Current directory : $(pwd)"
          echo "Trigger name: $TRIGGER_NAME"
          echo "Current branch : $(git rev-parse --abbrev-ref HEAD)"
          # install make
          docker buildx version
          docker buildx create --name multiarch-builder --use --driver-opt=image="${BUILDKIT_IMAGE}"
          docker buildx inspect --bootstrap

      - name: sign-artifact
        when: false
      - name: scan-artifact
        when: 'false'
  deploy-checks:
    include:
      - dind
    # deploy-checks includes three configurable steps: deploy, dynamic-scan, acceptance-test
    steps:
      - name: deploy
        when: 'false'
      - name: dynamic-scan
        when: 'false'
      - name: acceptance-test
        when: 'false'

  deploy-release:
    # deploy-release includes one configurable step: run-stage
    steps:
      - name: run-stage
        when: 'false'
finally:
  code-ci-finish:
    steps:
      - name: run-stage
        when: 'false'
        